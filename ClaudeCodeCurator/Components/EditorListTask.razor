@namespace ClaudeCodeCurator.Components
@using ClaudeCodeCurator.Models
@using ClaudeCodeCurator.Entities
@using ClaudeCodeCurator.Common
@inject EditorState EditorState

<div class="border-l-2 border-gray-100 pl-2 py-1 @(IsSelected ? "bg-gray-200" : "") hover:bg-gray-200 rounded-sm cursor-pointer transition-colors" @onclick="EditTask">
    <div class="flex items-center">
        <div class="flex-grow">
            <div class="flex items-center">
                <span class="text-xs px-1.5 py-0.5 rounded @GetTaskTypeClass(Task.Type) mr-1">
                    @Task.Type
                </span>
                <span class="text-xs bg-gray-200 rounded px-1 mr-1">T-@Task.TaskNumber</span>
                <span class="text-xs font-medium truncate">@Task.Name</span>
            </div>
            
            <div class="flex items-center mt-0.5 space-x-1">
                @if (Task.ApprovedByUserUtc.HasValue)
                {
                    <span class="px-1 py-0.5 rounded bg-green-100 text-green-800 text-xs">✓</span>
                }
                @if (Task.RequestedByAiUtc.HasValue)
                {
                    <span class="px-1 py-0.5 rounded bg-blue-100 text-blue-800 text-xs">⟳</span>
                }
                @if (Task.FinishedByAiUtc.HasValue)
                {
                    <span class="px-1 py-0.5 rounded bg-purple-100 text-purple-800 text-xs">✓</span>
                }
                @if (Task.Paused)
                {
                    <span class="px-1 py-0.5 rounded bg-yellow-100 text-yellow-800 text-xs">⏸</span>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public TaskModel Task { get; set; } = null!;
    
    [Parameter]
    public UserStoryModel UserStory { get; set; } = null!;
    
    private bool IsSelected => 
        (EditorState.CurrentMode == EditorState.DetailViewMode.EditTask || 
         EditorState.CurrentMode == EditorState.DetailViewMode.ViewTask) &&
        EditorState.SelectedTask?.Id == Task.Id;
    
    private void ViewTask()
    {
        EditorState.ShowViewTask(Task, UserStory);
    }
    
    private void EditTask()
    {
        EditorState.ShowEditTask(Task, UserStory);
    }
    
    private string GetTaskTypeClass(TaskType type)
    {
        return type switch
        {
            TaskType.Bug => "bg-red-100 text-red-800",
            TaskType.Verify => "bg-green-100 text-green-800",
            _ => "bg-blue-100 text-blue-800"
        };
    }
}